@mixin list-unstyled {
  padding-left: 0;
  list-style: none;
}

//Following set of functions for building icons
// From http://codepen.io/noahblon/post/coloring-svgs-in-css-background-images
@function _buildIcon($icon) {
  $icon: '%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20width%3D%2224%22%20height%3D%2224%22%3E#{$icon}%3C%2Fsvg%3E';
  @return $icon;
}

@function _buildPath($path, $parameters) {
  $icon: '%3Cpath%20fill%3D%22#{map-get($parameters, color)}%22%20stroke%3D%22#{map-get($parameters, stroke-color)}%22%20stroke-width%3D%22#{map-get($parameters, stroke-width)}%22%20style%3D%22#{map-get($parameters, css)}%22%20d%3D%22#{$path}%22%20%2F%3E';
  @return $icon;
}

@function icon(
  $icon-name,
  $color,
  $stroke-color: transparent,
  $stroke-width: 0,
  $css: '' // arbitrary css
  ){
    $parameters: (
      'color': $color,
      'stroke-color': $stroke-color,
      'stroke-width': $stroke-width,
      'css': $css
    );

    $icons: (
      heart: _buildPath('M12 21.35l-1.45-1.32c-5.15-4.67-8.55-7.75-8.55-11.53 0-3.08 2.42-5.5 5.5-5.5 1.74 0 3.41.81 4.5 2.09 1.09-1.28 2.76-2.09 4.5-2.09 3.08 0 5.5 2.42 5.5 5.5 0 3.78-3.4 6.86-8.55 11.54l-1.45 1.31z', $parameters),
      star: _buildPath('M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z', $parameters)
    );


    $icon: _buildIcon(map-get($icons, $icon-name));
    @return url("data:image/svg+xml;charset=utf8,#{$icon}");
  }

  .test-icon {
  width: 48px;
  height: 48px;
  background: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/18515/heart-sprite.svg) no-repeat;
  background-size: cover;
  display: inline-block;
}

/* Examples */
.icon-red    { background-image: icon(heart, red); }
.icon-orange { background-image: icon(heart, orange); }
.icon-yellow { background-image: icon(heart, yellow) }
.icon-green  { background-image: icon(heart, green) }
.icon-blue   { background-image: icon(heart, blue) }
.icon-indigo { background-image: icon(heart, indigo) }
.icon-violet { background-image: icon(heart, violet) }

.icon-cyan    { background-image: icon(heart, cyan); }
.icon-magenta { background-image: icon(heart, magenta); }
.icon-lime    { background-image: icon(heart, lime); }
.icon-olive   { background-image: icon(heart, olive); }
.icon-maroon  { background-image: icon(heart, maroon); }
.icon-purple  { background-image: icon(heart, purple); }

.icon-white  { background-image: icon(heart, white); }
.icon-gray10 { background-image: icon(heart, 'rgb(230, 230, 230)'); }
.icon-gray20 { background-image: icon(heart, 'rgb(204, 204, 204)'); }
.icon-gray30 { background-image: icon(heart, 'rgb(179, 179, 179)'); }
.icon-gray40 { background-image: icon(heart, 'rgb(153, 153, 153))'); }
.icon-gray50 { background-image: icon(heart, 'rgb(127, 127, 127)'); }
.icon-gray60 { background-image: icon(heart, 'rgb(102, 102, 102)'); }
.icon-gray70 { background-image: icon(heart, 'rgb(76, 76, 76)'); }
.icon-gray80 { background-image: icon(heart, 'rgb(51, 51, 51)'); }
.icon-gray90 { background-image: icon(heart, 'rgb(25, 25, 25)'); }
.icon-black  { background-image: icon(heart, black); }

.icon-stroke       { background-image: icon(heart, transparent, red, 2); }
.icon-stroke-color { background-image: icon(heart, red, black, 2); }
.icon-dashstroke   { background-image: icon(heart, red, black, 2, 'stroke-dasharray : 2px, 1px;'); }
.icon-star         { background-image: icon(star, blue); }


///Functions to create svg backgrounds:

/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

/// Create a urlEncoded SVG DOM element
/// @author Mike iLL
/// @param {String} $bg - SVG PATH, including parameters
/// @param {String} $width - Width of SVG DOM Element
/// @param {String} $height - Height of SVG DOM Element
/// @param {String} $viewbox - Four values, separated by spaces, compatible with svg viewbox specifications
/// @return {String} urlEncoded SVG DOM Object
@function _buildSVG($bg, $width:'100%', $height:'100%', $viewbox:'0 0 100 100') {
  $width: str-replace($width, '%', '%25');
  $height: str-replace($height, '%', '%25');
  $viewbox: str-replace($viewbox, ' ', '%20');
  $bg: '%3Csvg%20width%3D%22#{$width}%22%20height%3D%22#{$width}%22%20viewBox%3D%22#{$viewbox}%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E#{$bg}%3C%2Fsvg%3E%0A%0A';
  @return $bg;
}

/// Create a urlEncoded SVG path
/// @author Mike iLL
/// @param {String} $path - Actual DATA string containg the SVG image
/// @param {Map} $parameters - Parameter keys and corresponsing values to apply to SVG
/// @return {String} urlEncoded SVG data string
@function _buildPath($path, $parameters) {
  $icon: '%3Cpath%20fill%3D%22#{map-get($parameters, color)}%22%20stroke%3D%22#{map-get($parameters, stroke-color)}%22%20stroke-width%3D%22#{map-get($parameters, stroke-width)}%22%20style%3D%22#{map-get($parameters, css)}%22%20d%3D%22#{$path}%22%20%2F%3E';
  @return $icon;
}

// ----
// Sass (v3.4.7)
// ----

/// Render an SVG background image
/// @author Mike iLL
/// @param {String} $backgroundName - Value key to specified svg data string in $backgrounds map
/// @param {String} $color - CSS color Value for SVG fill
/// @param {String} $stroke-color - CSS color Value for SVG stroke
/// @param {Number} $stroke-width - Number to define size of SVG stroke
/// @param {String} $width - Width of SVG DOM Element
/// @param {String} $height - Height of SVG DOM Element
/// @param {String} $viewbox - Four values, separated by spaces, compatible with svg viewbox specifications
/// @param {String} $css - Arbitrary css to apply to SVG
/// @return {String} Background SVG string enclosed in url() parameter

///TODO Consider moving backgrounds map outside of function
@function renderSVG(
  $backgroundName,
  $color,
  $stroke-color: transparent,
  $stroke-width: 0,
  $width: '100%',
  $height: '100%',
  $viewbox: '0 0 100 100',
  $css: '' // arbitrary css
  ){
    $parameters: (
      'color': $color,
      'stroke-color': $stroke-color,
      'stroke-width': $stroke-width,
      'css': $css
    );

    $backgrounds: (
      female_bust: _buildPath('M58.292,81.733c2.468,-0.731 5.032,-1.59 5.684,-1.72c1.129,-0.225 1.954,-1.13 3.234,-1.13c1.28,0 4.358,-0.753 6.618,-0.753c2.254,0 1.954,0.529 2.33,1.206c0.355,0.636 0.974,1.14 1.111,1.95c-0.637,0.712 -3.474,3.533 -8.882,4.122c-6.203,0.676 -13.309,4.964 -13.309,4.964l3.427,-0.252l0,0c-0.096,-0.035 0.043,-0.121 0.225,-0.205c2.809,-2.447 8.639,-3.493 8.639,-3.493c6.561,-0.657 8.835,-2.679 9.623,-4.027c-0.162,-0.587 0.355,-0.264 0.297,-0.957c-0.005,-0.052 -0.011,-0.103 -0.02,-0.152c0.094,-0.105 0.14,-0.164 0.14,-0.164c0,0 0.014,0.536 -0.417,1.273c0.049,0.18 0.162,0.444 0.373,0.848c0.9,1.731 1.129,1.957 0.3,3.158c-0.829,1.204 0,0.903 0.6,1.469c0.605,0.56 -0.752,0.636 -0.752,0.636l0,0.903l-1.503,-0.076c-1.504,-0.075 -4.887,-0.376 -4.887,-0.376l-1.428,-0.451l-1.129,0.594c-2.481,-0.386 -9.325,0.611 -9.325,0.611c0,0 -0.288,0.1 -0.511,0.204c-0.077,0.067 -0.152,0.135 -0.225,0.205c0.075,0.027 0.29,0.023 0.736,-0.036c1.73,-0.225 4.966,0.452 4.966,0.452c1.051,1.051 4.812,0.076 4.812,0.076c0.902,1.428 4.661,0.076 4.661,0.076c0.376,0.826 2.18,1.056 2.18,1.056c0,0 0,0.674 -0.223,3.381c-0.227,2.708 -1.73,7.294 -2.031,9.25c-0.298,1.955 -0.074,3.156 0.379,4.286c0.449,1.13 0.603,3.909 0.603,3.909c-1.282,-1.503 -6.394,-13.608 -6.394,-13.608c0.15,1.579 4.058,12.932 5.94,16.091c1.879,3.158 2.255,4.588 2.182,5.411c-0.077,0.827 -0.376,1.129 0.225,2.182c0.592,1.051 0.743,2.351 0.743,2.354l-9.173,0l0,-0.327c-1.579,-3.685 -1.131,-10.754 -1.428,-11.955c-0.302,-1.203 -0.302,-4.36 -0.903,-4.886c-0.603,-0.526 -5.111,-0.378 -5.111,-0.378c0.035,0.062 0.073,0.121 0.109,0.176c2.229,3.425 3.336,2.349 3.482,2.178l0.017,0.506c-0.151,-4.509 0,-0.527 0,-0.527c0,0 -0.006,0.008 -0.017,0.021l0.017,-0.021c0,0 -0.151,-3.982 0,0.527c0.149,4.509 1.053,4.283 1.053,4.283c0.9,2.63 1.051,10.396 1.051,10.403l-17.617,0c-2.142,-6.291 -1.479,-11.748 -1.479,-11.748c0.338,-4.172 5.786,-8.245 5.786,-8.245c-3.742,0.641 -5.643,4.378 -5.643,4.378c0.681,-4.288 2.937,-13.174 2.937,-13.174c-8.682,18.374 -3.465,28.782 -3.461,28.789l-5.559,0l0,-0.854c-0.226,-1.726 0,-5.641 0,-5.641c-1.504,-2.403 -2.782,-6.464 -3.083,-7.742c-0.301,-1.278 -0.979,-4.886 -0.903,-7.144c0.038,-1.119 -0.054,-1.572 -0.35,-1.91c-0.183,-0.102 -0.361,-0.244 -0.528,-0.436c-0.279,-0.196 -0.634,-0.433 -1.077,-0.813c-1.579,-1.352 0,-1.128 -0.301,-2.557c-0.091,-0.434 -0.141,-0.805 -0.149,-1.14c-0.103,-0.448 0.006,-0.862 0.172,-1.152c0.1,-0.285 0.242,-0.565 0.428,-0.866c0.601,-0.975 -0.678,-0.603 -2.332,-1.727c-1.654,-1.13 -0.677,-1.879 -0.301,-1.955c0.376,-0.079 1.053,0.751 1.429,-0.828c0.376,-1.578 2.556,-1.053 2.556,-1.053c0.679,0.085 0.604,0.079 2.183,-1.312c1.58,-1.392 6.09,-1.429 7.669,-2.144c1.43,-0.649 4.888,-2.782 7.067,-2.932c0.514,-0.036 1.286,-0.196 2.181,-0.424c0.69,-0.247 1.45,-0.463 2.286,-0.637ZM37.009,101.709c1.543,0.85 3.528,-1.206 3.528,-1.206c0.633,0.703 0.751,0.638 1.992,-0.34c1.24,-0.977 3.535,-6.129 3.535,-6.129c0,0 1.164,-1.353 -2.571,2.745c-3.734,4.096 -7.092,4.398 -7.092,4.398c0.027,0.033 0.053,0.065 0.08,0.096c0.222,0.155 0.396,0.284 0.528,0.436ZM46.122,91.053c0.878,-0.292 1.843,-0.622 0.712,-0.292c-0.202,0.06 -0.442,0.16 -0.712,0.292c-0.522,0.173 -1.014,0.334 -1.014,0.334c0,0 -5.192,2.834 -6.093,3.433c-0.903,0.604 -2.563,0.556 -3.384,0.381c-0.132,-0.03 -0.345,0.133 -0.505,0.41c-0.125,0.359 -0.182,0.725 -0.172,1.152c0.018,0.08 0.043,0.16 0.076,0.241c0.403,1.008 2.18,-0.605 3.683,-1.278c1.335,-0.602 5.278,-3.631 7.409,-4.673ZM58.292,81.733c-0.794,0.235 -1.578,0.457 -2.286,0.637c-6.44,2.31 -6.804,7.401 -6.804,7.401c0,0 -0.113,0.901 0.263,0.937c-0.001,-0.001 0.446,0.126 0.541,-0.227c1.468,-5.499 8.298,-8.75 8.298,-8.75l-0.012,0.002ZM32.761,55.962c-0.058,-0.423 -0.126,-2.874 3.81,-3.849c4.399,-1.09 5.866,1.54 5.79,2.405c-0.076,0.865 -0.638,3.835 -5.114,4.475c-4.474,0.638 -5.037,-2.481 -5.037,-2.481c0,0 -0.339,-1.994 -0.526,-9.964c-0.188,-7.97 3.346,-10.187 4.097,-10.564c0.752,-0.377 3.534,-2.668 5.151,-4.211c1.616,-1.54 0.866,-3.458 0.866,-3.458c0,0 -0.714,-1.653 -2.144,-5.037c-1.43,-3.384 -4.287,-3.197 -6.767,-4.964c-2.482,-1.766 -1.541,-4.735 -1.541,-4.735c-0.527,-3.422 0.602,-4.174 0.602,-4.174c-0.038,-8.27 7.707,-7.404 7.707,-7.404c5.973,-3.421 9.133,3.763 9.133,3.763c3.272,1.242 2.369,4.475 2.369,4.475c1.881,2.97 -0.677,4.926 -1.127,6.204c-0.452,1.277 -0.528,-0.377 0.713,4.096c1.241,4.474 7.256,4.212 8.385,4.474c1.127,0.263 2.743,0 3.796,-0.676c1.053,-0.678 3.194,-0.564 3.194,-0.564c-1.728,0.263 -2.504,2.909 -2.504,2.909c-0.341,8.13 7.919,8.821 7.919,8.821l-0.788,-0.341c-0.791,-0.339 -3.089,-2.747 -4.274,-4.945c-1.218,-2.261 -1.029,-6.203 2.13,-6.182c4.413,0.026 3.835,7.705 3.947,8.608c0.113,0.902 -0.149,6.842 0.15,9.849c0.301,3.007 1.203,13.798 0.902,15.791c-0.3,1.992 -0.563,3.31 -0.035,5.489c0.523,2.182 1.579,12.97 1.279,12.893c-0.301,-0.076 -1.204,0 -5.452,0.414c-4.249,0.412 -5.378,1.727 -7.106,2.104c-1.731,0.376 -3.76,0.604 -4.625,0.976c-0.863,0.377 -3.42,1.465 -4.81,1.806c-1.392,0.34 -3.61,1.279 -4.287,1.617c-0.677,0.338 -1.692,0.9 -2.405,1.201c-0.714,0.3 -2.934,0.676 -3.684,0.713c-0.752,0.038 -1.618,0.45 -2.257,0.564c-0.639,0.111 -3.032,3.214 -3.032,3.214c-0.225,-6.036 2.093,-13.63 2.544,-14.194c0.45,-0.563 0.76,-3.553 1.325,-4.481c0.563,-0.931 3.862,-6.768 3.862,-6.966c0,-0.198 1.368,-7.381 -1.001,-9.776c-2.368,-2.397 -2.988,-4.315 -3.045,-4.739c-0.057,-0.42 -0.152,-3.684 -0.152,-3.684c-2.198,-0.535 -3.303,-2.496 -3.303,-2.496c0.423,2.736 1.975,2.894 1.975,3.158c0,0.265 0.15,1.599 0.112,3.102c-0.035,1.46 0.635,1.988 0.675,2.019c0.029,0.007 0.311,0.103 0.002,0.001c-1.635,-0.535 -3.933,-0.029 -3.933,-0.029c-4.447,1.207 -3.609,4.296 -3.486,4.773c0.007,0.05 0.013,0.072 0.013,0.06c0,-0.007 -0.005,-0.028 -0.013,-0.06ZM54.201,67.943c0,0 0.483,1.483 1.668,0c0.001,0 -1.066,-0.339 -1.668,0ZM40.178,51.217c-0.003,-0.001 -0.003,-0.001 0.002,0.001l-0.002,-0.001Z', $parameters),
      bishop: _buildPath('M142.875,133.254c-2.445,0.459 -9.707,1.823 -11.649,2.187c-4.049,0.795 -4.049,0.795 -4.968,-3.423c-4.487,-23.915 -12.495,-66.626 -15.751,-83.996c-0.718,-3.829 -0.718,-3.829 -5.285,0.011c-15.435,13.555 -31.879,34.306 -31.879,63.278c0,21.094 4.218,42.188 16.875,67.5c0,0 -8.438,0 -8.438,4.219c0,4.219 8.438,4.219 8.438,4.219c0,0 0,12.656 -4.219,16.875c0,0 -12.656,0 -12.656,8.437c0,8.438 12.656,8.438 12.656,8.438c-12.656,0 -25.313,0 -25.313,12.656c0,12.656 12.657,12.656 25.313,12.656c8.437,16.875 8.437,101.25 -12.656,147.657c-4.219,4.218 -12.657,4.218 -12.657,4.218c0,37.969 -54.843,46.407 -54.843,71.719c0,12.656 21.093,21.094 21.093,21.094c0,0 -25.312,4.219 -25.312,8.437l0,4.219c0,4.219 0,4.219 4.219,4.219l261.562,0c4.219,0 4.219,0 4.219,-4.219l0,-4.219c0,-4.218 -25.313,-8.437 -25.313,-8.437c0,0 21.094,-8.438 21.094,-21.094c0,-25.312 -54.844,-33.75 -54.844,-71.719c0,0 -8.437,0 -12.656,-4.218c-21.094,-46.407 -21.094,-130.782 -12.656,-147.657c12.656,0 25.312,0 25.312,-12.656c0,-12.656 -12.656,-12.656 -25.312,-12.656c0,0 12.656,0 12.656,-8.438c0,-8.437 -12.656,-8.437 -12.656,-8.437c-4.219,-4.219 -4.219,-16.875 -4.219,-16.875c0,0 8.438,0 8.438,-4.219c0,-4.219 -8.438,-4.219 -8.438,-4.219c12.656,-25.312 16.875,-46.406 16.875,-67.5c0,-46.406 -42.187,-71.718 -54.844,-80.156c12.657,-16.875 4.219,-29.531 -8.437,-29.531c-12.656,0 -21.094,12.656 -8.438,29.531c2.022,10.786 13.758,73.382 18.226,97.212c0.701,4.066 0.701,4.066 -3.537,4.887l0,0Z', $parameters),
      star: _buildPath('M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z', $parameters)
    );

    $background: _buildSVG(map-get($backgrounds, $backgroundName),
                            $width,
                            $height,
                            $viewbox);
    @return url("data:image/svg+xml;charset=utf8,#{$background}");
  }

// ----
// Sass (v3.4.7)
// Compass (v1.0.1) !I don't think this requires Compass!
// ----

/// Convert angle
/// @author Chris Eppstein
/// @param {Number} $value - Value to convert
/// @param {String} $unit - Unit to convert to
/// @return {Number} Converted angle
@function convert-angle($value, $unit) {
  $convertable-units: deg grad turn rad;
  $conversion-factors: 1 (10grad/9deg) (1turn/360deg) (3.1415926rad/180deg);
  @if index($convertable-units, unit($value)) and index($convertable-units, $unit) {
    @return $value
             / nth($conversion-factors, index($convertable-units, unit($value)))
             * nth($conversion-factors, index($convertable-units, $unit));
  }

  @warn "Cannot convert `#{unit($value)}` to `#{$unit}`.";
}

/// Test if `$value` is an angle
/// @param {*} $value - Value to test
/// @return {Bool}
@function is-direction($value) {
  $is-direction: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
  $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));

  @return $is-direction or $is-angle;
}

/// Convert a direction to legacy syntax
/// @param {Keyword | Angle} $value - Value to convert
/// @require {function} is-direction
/// @require {function} convert-angle
@function legacy-direction($value) {
  @if is-direction($value) == false {
    @warn "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be an angle or a direction";
  }

  $conversion-map: (
    to top          : bottom,
    to top right    : bottom left,
    to right top    : left bottom,
    to right        : left,
    to bottom right : top left,
    to right bottom : left top,
    to bottom       : top,
    to bottom left  : top right,
    to left bottom  : right top,
    to left         : right,
    to left top     : right bottom,
    to top left     : bottom right
  );

  @if map-has-key($conversion-map, $value) {
    @return map-get($conversion-map, $value);
  }

  @return 90deg - convert-angle($value, 'deg');
}

/// Mixin printing a linear-gradient
/// as well as a plain color fallback
/// and the `-webkit-` prefixed declaration
/// @access public
/// @param {String | List | Angle} $direction - Linear gradient direction
/// @param {Arglist} $color-stops - List of color-stops composing the gradient
@mixin linear-gradient($direction, $color-stops...) {
  @if is-direction($direction) == false {
    $color-stops: ($direction, $color-stops);
    $direction: 180deg;
  }

  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

@mixin linear-gradient-svg(
  $shape,
  $color,
  $stroke-color: lime,//transparent,
  $stroke-width: 2,
  $repeat-scroll-placement-size: no-repeat scroll 100% / 100% auto,
  $width: '100%',
  $height: '100%',
  $viewbox: '0 0 100 100',
  $css: '',
  $direction: 180deg,
  $color-stops...) {
  @if is-direction($direction) == false {
    $color-stops: ($direction, $color-stops);
    $direction: 180deg;
  }

  background: renderSVG($shape, $color, $stroke-color, $stroke-width, $width, $height, $viewbox) $repeat-scroll-placement-size, nth(nth($color-stops, 1), 1);
  background: renderSVG($shape, $color, $stroke-color, $stroke-width, $width, $height, $viewbox) $repeat-scroll-placement-size, -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: renderSVG($shape, $color, $stroke-color, $stroke-width, $width, $height, $viewbox) $repeat-scroll-placement-size, linear-gradient($direction, $color-stops);
}

/* Examples

.wrap {
  @include linear-gradient-svg(bishop, yellow, blue, 2, no-repeat scroll 10px 100% / 10% auto, '100%', '100%', '0 0 274 510', '', 42deg, #B58234 0%, #D2B545 50%, #D7C04D 50.01%, #FFFFFF 100%);
}

.selector-2 {
  @include linear-gradient(to right, #E47D7D 0%, #C195D3 50%, #4FB4E8 100%);
}

.selector-3 {
  @include linear-gradient(42deg, #B58234 0%, #D2B545 50%, #D7C04D 50.01%, #FFFFFF 100%);
}

*/

            //to top,  hsla(181,31%,50%,1) 0%,hsla(181,45%,46%,1) 40%,hsla(181,57%,50%,1) 100%

/* Generate multi-column responsive list items using flexbox
 *
 * Src: Kevin Lamping http://codepen.io/klamping/pen/waMOeX
 * For his tutorial: http://fourkitchens.com/blog/article/responsive-multi-column-lists-flexbox
 */
@mixin n-columns($min-width, $gutter, $last-equal: false, $max-cols: 3) {
  .items {
    display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
    display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
    display: -ms-flexbox;      /* TWEENER - IE 10 */
    display: -webkit-flex;     /* NEW - Chrome */
    display: flex;             /* NEW, Spec - Opera 12.1, Firefox 20+ */
    flex-wrap: wrap;
    margin-left: -$gutter;
    margin-top: -$gutter;


    .list__item {
      -webkit-box-flex: 1 0 $min-width;      /* OLD - iOS 6-, Safari 3.1-6 */
      -moz-box-flex: 1 0 $min-width;         /* OLD - Firefox 19- */
      -webkit-flex: 1 0 $min-width;          /* Chrome */
      -ms-flex: 1 0 $min-width;              /* IE 10 */
      flex: 1 0 $min-width;                  /* NEW, Spec - Opera 12.1, Firefox 20+ */
      margin-left: $gutter;
      margin-top: $gutter;

      @if $last-equal {
        @for $i from 2 through $max-cols {
          $screen-width: ($min-width*$i)+($gutter*$i);
          $column-width: (100%/$i);
          @media (min-width: $screen-width) {
            max-width: calc(#{$column-width} - #{$gutter});
          }
        }

        $column-width: (100%/$max-cols);
        @media (min-width: $min-width*$max-cols) {
            min-width: calc(#{$column-width} - #{$gutter});
        }
      }
    }
  }
}

/**


/* Generate multi-row responsive list items using flexbox
 * Needs work and based on above mixin
 *
 */
@mixin n-rows($min-height, $min-width, $gutter, $last-equal: false, $max-cols: 5) {
  .items {
    display: flex;
    flex-wrap: column wrap;
    margin-left: -$gutter;
    margin-top: -$gutter;
    flex-direction: column;
    flex-flow: column wrap;

    .list__item {
      flex: 1 0 $min-height;
      margin-left: $gutter;
      margin-top: $gutter;
      width: $min-width;

      @if $last-equal {
        @for $i from 2 through $max-cols {
          $screen-width: ($min-width*$i)+($gutter*$i);
          $column-width: (100%/$i);
          @media (min-width: $screen-width) {
            max-width: calc(#{$column-width} - #{$gutter});
          }
        }

        $column-width: (100%/$max-cols);
        @media (min-width: $min-width*$max-cols) {
            min-width: calc(#{$column-width} - #{$gutter});
        }
      }
    }
  }
}

/**


 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Typography */

@mixin typo-preferred-font($usePreferred: true) {
  @if $usePreferred {
    font-family: $preferred_font;
  }
}

@mixin typo-display-4($colorContrast: false, $usePreferred: true) {
  @include typo-preferred-font($usePreferred);
  font-size: 4rem;
  font-weight: 300;
  line-height: 1;
  letter-spacing: -0.04em;

  @if $colorContrast {
    opacity: 0.54;
  }
}

@mixin typo-display-3($colorContrast: false, $usePreferred: true) {
  @include typo-preferred-font($usePreferred);
  font-size: 2.6rem;
  font-weight: 400;
  line-height: 1.35;
  letter-spacing: -0.02em;

  @if $colorContrast {
    opacity: 0.54;
  }
}

@mixin typo-display-2($colorContrast: false, $usePreferred: true) {
  @include typo-preferred-font($usePreferred);
  font-size: 2rem;
  font-weight: 400;
  line-height: 48px;

  @if $colorContrast {
    opacity: 0.54;
  }
}

@mixin typo-display-1($colorContrast: false, $usePreferred: true) {
  @include typo-preferred-font($usePreferred);
  font-size: 1.6rem;
  font-weight: 400;
  line-height: 40px;

  @if $colorContrast {
    opacity: 0.54;
  }
}

@mixin typo-headline($colorContrast: false, $usePreferred: true) {
  @include typo-preferred-font($usePreferred);
  font-size: 1.4rem;
  font-weight: 400;
  line-height: 32px;
  -moz-osx-font-smoothing: grayscale;

  @if $colorContrast {
    opacity: 0.87;
  }
}

@mixin typo-title($colorContrast: false, $usePreferred: true) {
  @include typo-preferred-font($usePreferred);
  font-size: 1.2rem;
  font-weight: 500;
  line-height: 1;
  letter-spacing: 0.02em;

  @if $colorContrast {
    opacity: 0.87;
  }
}

@mixin typo-subhead($colorContrast: false, $usePreferred: true) {
  @include typo-preferred-font($usePreferred);
  font-size: 16px;
  font-weight: 400;
  line-height: 24px;
  letter-spacing: 0.04em;

  @if $colorContrast {
    opacity: 0.87;
  }
}

@mixin typo-subhead-2($colorContrast: false, $usePreferred: true) {
  @include typo-preferred-font($usePreferred);
  font-size: 16px;
  font-weight: 400;
  line-height: 28px;
  letter-spacing: 0.04em;

  @if $colorContrast {
    opacity: 0.87;
  }
}

@mixin typo-body-2($colorContrast: false, $usePreferred: false) {
  @include typo-preferred-font($usePreferred);
  font-size: 14px;
  @if $usePreferred {
    font-weight: 500;
  } @else {
    font-weight: bold;
  }
  line-height: 24px;
  letter-spacing: 0;

  @if $colorContrast {
    opacity: 0.87;
  }
}

@mixin typo-body-1($colorContrast: false, $usePreferred: false) {
  @include typo-preferred-font($usePreferred);
  font-size: 14px;
  font-weight: 400;
  line-height: 24px;
  letter-spacing: 0;

  @if $colorContrast {
    opacity: 0.87;
  }
}

@mixin typo-caption($colorContrast: false, $usePreferred: false) {
  @include typo-preferred-font($usePreferred);
  font-size: 12px;
  font-weight: 400;
  line-height: 1;
  letter-spacing: 0;

  @if $colorContrast {
    opacity: 0.54;
  }
}

@mixin typo-blockquote($colorContrast: false, $usePreferred: true) {
  @include typo-preferred-font($usePreferred);
  position: relative;
  font-size: 24px;
  font-weight: 300;
  font-style: italic;
  line-height: 1.35;
  letter-spacing: 0.08em;

  &:before {
    position: absolute;
    left: -0.5em;
    content: '“';
  }

  &:after {
    content: '”';
    margin-left: -0.05em;
  }

  @if $colorContrast {
    opacity: 0.54;
  }
}

@mixin typo-menu($colorContrast: false, $usePreferred: true) {
  @include typo-preferred-font($usePreferred);
  font-size: 14px;
  font-weight: 500;
  line-height: 1;
  letter-spacing: 0;

  @if $colorContrast {
    opacity: 0.87;
  }
}

@mixin typo-button($colorContrast: false, $usePreferred: true) {
  @include typo-preferred-font($usePreferred);
  font-size: 14px;
  font-weight: 500;
  text-transform: uppercase;
  line-height: 1;
  letter-spacing: 0;

  @if $colorContrast {
    opacity: 0.87;
  }
}

@mixin typo-icon() {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  word-wrap: normal;
  font-feature-settings: 'liga';
  -webkit-font-feature-settings: 'liga';
  -webkit-font-smoothing: antialiased;
}

/* Shadows */

// Focus shadow mixin.
@mixin focus-shadow() {
  box-shadow: 0 0 8px rgba(0,0,0,.18),0 8px 16px rgba(0,0,0,.36);
}

@mixin shadow-2dp() {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
              0 3px 1px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity),
              0 1px 5px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
}
@mixin shadow-3dp() {
  box-shadow: 0 3px 4px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
              0 3px 3px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity),
              0 1px 8px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
}
@mixin shadow-4dp() {
  box-shadow: 0 4px 5px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
              0 1px 10px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
              0 2px 4px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}
@mixin shadow-6dp() {
  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
              0 1px 18px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
              0 3px 5px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}
@mixin shadow-8dp() {
  box-shadow: 0 8px 10px 1px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
              0 3px 14px 2px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
              0 5px 5px -3px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin shadow-16dp() {
  box-shadow: 0 16px 24px 2px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
              0  6px 30px 5px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
              0  8px 10px -5px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin shadow-24dp() {
  box-shadow: 0  9px 46px  8px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
              0 11px 15px -7px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
              0 24px 38px  3px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

/* Animations */

@mixin material-animation-fast-out-slow-in($duration:0.2s) {
  transition-duration: $duration;
  transition-timing-function: $animation-curve-fast-out-slow-in;
}

@mixin material-animation-linear-out-slow-in($duration:0.2s) {
  transition-duration: $duration;
  transition-timing-function: $animation-curve-linear-out-slow-in;
}

@mixin material-animation-fast-out-linear-in($duration:0.2s) {
  transition-duration: $duration;
  transition-timing-function: $animation-curve-fast-out-linear-in;
}

@mixin material-animation-default($duration:0.2s) {
  transition-duration: $duration;
  transition-timing-function: $animation-curve-default;
}

/* Dialog */

@mixin dialog-width($units:5) {
  @if(type_of($units) != 'number') {
    @error "The unit given to dialog-width should be a number.";
  }
  // 56dp is the base unit width for Dialogs.
  // With 5 units being the number of units for a mobile device.
  // https://goo.gl/sK2O5o
  width: $units * 56px;
}

